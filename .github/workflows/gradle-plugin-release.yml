name: gradle-plugin-release

on:
  workflow_call:
    inputs:
      git-email:
        type: string
        description: Git user email address
        required: true
      git-user:
        type: string
        description: Git user username
        required: true
      java-distribution:
        type: string
        description: Name of Java JDK distribution to use
        required: false
        default: temurin
      java-version:
        type: number
        description: Version of Java JDK to use
        required: false
        default: 21
      run-code-coverage:
        type: boolean
        description: Value indicating if code coverage step should run
        required: true
      run-gradle-validation:
        type: boolean
        description: Value indicating if Gradle validation step should run
        required: true
    secrets:
      codecov-token:
        description: Codecov code coverage token
        required: false
      gradle-publish-key:
        description: Gradle plugin key used for publishing to Gradle plugin repository
        required: true
      gradle-publish-secret:
        description: Gradle plugin secret used for publishing to Gradle plugin repository
        required: true
      workflow-token:
        description: GitHub workflow token for pushing automated commits
        required: true

jobs:
  gradle-plugin-release:
    name: Gradle Plugin Release
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.pull_request.labels.*.name, 'release') && github.event.pull_request.merged == true }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          persist-credentials: false
          token: ${{ secrets.workflow-token }}

      - name: Setup Git
        run: |
          git config user.email ${GIT_EMAIL}
          git config user.name ${GIT_USER}
          git config url.https://$GITHUB_TOKEN@github.com/.insteadOf https://github.com/
        env:
          GIT_EMAIL: ${{ inputs.git-email }}
          GIT_USER: ${{ inputs.git-user }}
          GITHUB_TOKEN: ${{ secrets.workflow-token }}

      - name: Setup Java
        uses: actions/setup-java@v5.0.0
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5.0.0
        with:
          validate-wrappers: ${{ inputs.run-gradle-validation }}

      - name: Get Release Version
        run: |
          RELEASE_VERSION=$(grep '^version=' gradle.properties | sed -E 's/version=([0-9]+\.[0-9]+\.[0-9]+)(-SNAPSHOT)?/\1/')
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Release and Publish
        run: ./gradlew clean release -PskipTests=true -Prelease.useAutomaticVersion=true
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.gradle-publish-key }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.gradle-publish-secret }}
          GITHUB_TOKEN: ${{ secrets.workflow-token }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.4.1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: ${{ env.RELEASE_VERSION }}
          body: ${{ github.event.pull_request.body }}
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          make_latest: true
          token: ${{ secrets.workflow-token }}
